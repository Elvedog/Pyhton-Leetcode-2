Time & Space Complexity
Time complexity: 
O(n+m)
O(n+m)
Space complexity: 
O(1)
O(1) since we have at most 
26
26 different characters.
Given two strings s and t, return true if the two strings are anagrams of each other, otherwise return false.
An anagram is a string that contains the exact same characters as another string, but the order of the characters can be different.





class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        if len(s) != len(t):
            return False
        
        charS,charT = {}, {}


        for i in range(len(s)):
            charS[s[i]] = 1 + charS.get(s[i],0)
            charT[t[i]] = 1 + charT.get(t[i],0)

        return charS == charT
